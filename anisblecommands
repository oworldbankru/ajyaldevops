root@ubuntu:/etc/ansible# ansible --version
ansible 2.9.6
  config file = /etc/ansible/ansible.cfg
  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 2.7.12 (default, Oct  8 2019, 14:14:10) [GCC 5.4.0 20160609]

root@ubuntu:/etc/ansible# ls -lrt
total 28
-rw-r--r-- 1 root root  1016 Mar  4 21:39 hosts
-rw-r--r-- 1 root root 19985 Mar  4 21:39 ansible.cfg
drwxr-xr-x 2 root root  4096 Mar  4 21:46 roles
root@ubuntu:/etc/ansible#


vishal@ubuntu:/etc/ansible$ ls -lr
total 28
drwxr-xr-x 2 root root  4096 Mar  4 21:46 roles
-rw-r--r-- 1 root root  1016 Mar  4 21:39 hosts
-rw-r--r-- 1 root root 19985 Mar  4 21:39 ansible.cfg

Add new user to all the servers
==================================

vishal@ubuntu:~$ sudo su -
[sudo] password for vishal:
root@ubuntu:~# useradd ansadmin
root@ubuntu:~# passwd ansadmin
Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully
root@ubuntu:~#

GIVE ROOT PERMISSIONS
==================================

root@ubuntu:~# visudo

#includedir /etc/sudoers.d
ansadmin  ALL=(ALL)     NOPASSWD: ALL

Enable password auth
=====================
root@ubuntu:~#  nano /etc/ssh/sshd_config

# Change to no to disable tunnelled clear text passwords
PasswordAuthentication yes

Save it

use keyg
=========

ssh-keygen


Add the servers 
==============
ssh-copy-id server_ip1
ssh-copy-id server_ip2
ssh-copy-id server_ip3

Add the ip to ansible host files
===============================
cd /etc/ansible
nano hosts
add ip of all the nodes in the hostfile

Tes the ping with all the host
----------------------------

vishal@ubuntu:/etc/ansible$ ansible all -m ping

Create your own ansible configution
-----------------------------------------

vishal@ubuntu:/my_ansible_Dir$ sudo cp /etc/ansible/* /my_ansible_Dir/
cp: omitting directory '/etc/ansible/roles'
vishal@ubuntu:/my_ansible_Dir$ ls
ansible.cfg  hosts
vishal@ubuntu:/my_ansible_Dir$ sudo cp -r /etc/ansible/* /my_ansible_Dir/
vishal@ubuntu:/my_ansible_Dir$ ls
ansible.cfg  hosts  roles
vishal@ubuntu:/my_ansible_Dir$

vishal@ubuntu:/$ cd my_ansible_Dir/
vishal@ubuntu:/my_ansible_Dir$ sudo nano ansible.cfg

change the anisble host file path like below

# some basic default values...
inventory       = ./inventory
#inventory      = ./hosts1

save and exit


===========
Run Miltiple hsot from ansible

vishal@ubuntu:/my_ansible_Dir$ ansible 192.168.17.16:192.168.17.17 -m ping
192.168.17.16 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
192.168.17.17 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}

================================

how to create group in /etc/ansible/host or any other customer conf

[www]
192.168.17.16
[db]
192.168.17.17
192.168.17.15


Adhoc commnad
==================

vishal@ubuntu:/my_ansible_Dir$ ansible db -m shell -a "uptime"
192.168.17.15 | CHANGED | rc=0 >>
 00:24:04 up  3:22,  2 users,  load average: 0.05, 0.02, 0.00
192.168.17.17 | CHANGED | rc=0 >>
 00:24:04 up  3:22,  2 users,  load average: 0.05, 0.03, 0.00


Creating custom ansible.cgf

vishal@ubuntu:/my_ansible_Dir$ ls
ansible.cfg  inventory  roles
vishal@ubuntu:/my_ansible_Dir$ sudo cp ansible.cfg ansible.cfg.bkp
vishal@ubuntu:/my_ansible_Dir$ sudo rm ansible.cfg
vishal@ubuntu:/my_ansible_Dir$ ls
ansible.cfg.bkp  inventory  roles
vishal@ubuntu:/my_ansible_Dir$
vishal@ubuntu:/my_ansible_Dir$ sudo nano ansible.cfg
[defaults]
inventory = ./inventory
vishal@ubuntu:/my_ansible_Dir$ ansible all -m shell -a "free -m"
vishal@ubuntu:/my_ansible_Dir$ cat ansible.cfg
[defaults]
inventory = ./inventory


Copy a file from ansible engine to node
===========================================

vishal@ubuntu:/my_ansible_Dir$ sudo touch newfile
vishal@ubuntu:/my_ansible_Dir$ sudo nano newfile
vishal@ubuntu:/my_ansible_Dir$ cat inventory
[www]
192.168.17.16
[db]
192.168.17.17
192.168.17.15
vishal@ubuntu:/my_ansible_Dir$ ansible db -m copy -a "src=./newfile dest=/tmp"

ON OTHER NODES DO THIS

vishal@ubuntu:~$ cd /tmp/
vishal@ubuntu:/tmp$ cat newfile


